// <auto-generated />
using System;
using Investments.InfraStructure.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;

namespace Investments.InfraStructure.Data.Migrations
{
    [DbContext(typeof(InvestmentsContext))]
    partial class InvestmentsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Investments.Core.Entities.Ativo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Ativos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "CDB 100%",
                            Tipo = 1
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Fundo Imobiliário",
                            Tipo = 2
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Fundo LCI",
                            Tipo = 2
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Fundo Gold",
                            Tipo = 3
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Fundo Platinum",
                            Tipo = 3
                        },
                        new
                        {
                            Id = 6,
                            Nome = "PETR4",
                            Tipo = 4
                        },
                        new
                        {
                            Id = 7,
                            Nome = "BBAS3",
                            Tipo = 4
                        },
                        new
                        {
                            Id = 8,
                            Nome = "Tesouro IPCA+ 2025",
                            Tipo = 5
                        },
                        new
                        {
                            Id = 9,
                            Nome = "Tesouro Pré-Fixado 2027",
                            Tipo = 5
                        },
                        new
                        {
                            Id = 10,
                            Nome = "Caderneta de Poupança",
                            Tipo = 6
                        },
                        new
                        {
                            Id = 11,
                            Nome = "Bitcoin",
                            Tipo = 7
                        },
                        new
                        {
                            Id = 12,
                            Nome = "Ethereum",
                            Tipo = 7
                        });
                });

            modelBuilder.Entity("Investments.Core.Entities.Carteira", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AtivoId")
                        .HasColumnType("int");

                    b.Property<decimal>("Saldo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AtivoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Carteiras");
                });

            modelBuilder.Entity("Investments.Core.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataNascimento = new DateTime(1994, 4, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin@teste.com",
                            Nome = "Admin",
                            Password = "36F583DD16F4E1E201EB1E6F6D8E35A2CCB3BBE2658DE46B4FFAE7B0E9ED872E",
                            Tipo = 1
                        });
                });

            modelBuilder.Entity("Investments.Core.Entities.Carteira", b =>
                {
                    b.HasOne("Investments.Core.Entities.Ativo", "Ativo")
                        .WithMany()
                        .HasForeignKey("AtivoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Investments.Core.Entities.Usuario", "Usuario")
                        .WithMany("Ativos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ativo");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Investments.Core.Entities.Usuario", b =>
                {
                    b.Navigation("Ativos");
                });
#pragma warning restore 612, 618
        }
    }
}
